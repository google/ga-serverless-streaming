# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expressed or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Module defining the BigQuery table schema for hits."""
from apache_beam.io.gcp.internal.clients import bigquery


def get_schema():
  """Constructs the BQ table schema.

  Returns:
    A bigquery.TableSchema object.

  """
  table_schema = bigquery.TableSchema()

  server_time_utc = bigquery.TableFieldSchema(
      name='serverTimeUtc',
      type='TIMESTAMP',
      mode='NULLABLE',
      description='UTC timestamp generated by the Cloud Function')
  table_schema.fields.append(server_time_utc)

  server_datetime_eastern = bigquery.TableFieldSchema(
      name='serverDatetimeLocal',
      type='DATETIME',
      mode='NULLABLE',
      description='Local timezone date and time generated by the Cloud Function')
  table_schema.fields.append(server_datetime_eastern)

  client_id = bigquery.TableFieldSchema(
      name='clientId',
      type='STRING',
      mode='NULLABLE',
      description='Browser-specific anonymous identifier '
      'extracted from parameter cid')
  table_schema.fields.append(client_id)

  user_id = bigquery.TableFieldSchema(
      name='userId',
      type='STRING',
      mode='NULLABLE',
      description='User identifier '
      'extracted from parameter uid')
  table_schema.fields.append(user_id)

  hit_type = bigquery.TableFieldSchema(
      name='hitType',
      type='STRING',
      mode='NULLABLE',
      description='Type of hit extracted from parameter t')
  table_schema.fields.append(hit_type)

  is_interaction = bigquery.TableFieldSchema(
      name='isInteraction',
      type='BOOLEAN',
      mode='NULLABLE',
      description='TRUE if the hit is interactive, '
      'FALSE if the hit is not')
  table_schema.fields.append(is_interaction)

  custom_dimensions = bigquery.TableFieldSchema(
      name='customDimensions',
      type='RECORD',
      mode='REPEATED',
      description='Custom dimensions of any scope set in the hit')

  custom_dimensions_index = bigquery.TableFieldSchema(
      name='index',
      type='INTEGER',
      mode='NULLABLE',
      description='Custom dimension index')
  custom_dimensions.fields.append(custom_dimensions_index)

  custom_dimensions_value = bigquery.TableFieldSchema(
      name='value',
      type='STRING',
      mode='NULLABLE',
      description='Custom dimension value')
  custom_dimensions.fields.append(custom_dimensions_value)
  table_schema.fields.append(custom_dimensions)

  custom_metrics = bigquery.TableFieldSchema(
      name='customMetrics',
      type='RECORD',
      mode='REPEATED',
      description='Custom metrics of any scope set in the hit')

  custom_metrics_index = bigquery.TableFieldSchema(
      name='index',
      type='INTEGER',
      mode='NULLABLE',
      description='Custom metric index')
  custom_metrics.fields.append(custom_metrics_index)

  custom_metrics_value = bigquery.TableFieldSchema(
      name='value',
      type='FLOAT',
      mode='NULLABLE',
      description='Custom metric value')
  custom_metrics.fields.append(custom_metrics_value)
  table_schema.fields.append(custom_metrics)

  page = bigquery.TableFieldSchema(
      name='page',
      type='RECORD',
      mode='NULLABLE',
      description='Page-related fields, always set')

  hostname = bigquery.TableFieldSchema(
      name='hostname',
      type='STRING',
      mode='NULLABLE',
      description='Fully-qualified domain without protocol')
  page.fields.append(hostname)

  page_path = bigquery.TableFieldSchema(
      name='pagePath', type='STRING', mode='NULLABLE', description='Page path')
  page.fields.append(page_path)

  page_title = bigquery.TableFieldSchema(
      name='pageTitle',
      type='STRING',
      mode='NULLABLE',
      description='Page title')
  page.fields.append(page_title)

  page_url = bigquery.TableFieldSchema(
      name='url',
      type='STRING',
      mode='NULLABLE',
      description='Full URL with protocol')
  page.fields.append(page_url)

  page_query = bigquery.TableFieldSchema(
      name='query',
      type='STRING',
      mode='NULLABLE',
      description='URL query string')
  page.fields.append(page_query)

  page_referrer = bigquery.TableFieldSchema(
      name='referrer',
      type='STRING',
      mode='NULLABLE',
      description='Document referrer')
  page.fields.append(page_referrer)

  page_linkid = bigquery.TableFieldSchema(
      name='linkId',
      type='STRING',
      mode='NULLABLE',
      description='HTML element ID')
  page.fields.append(page_linkid)
  table_schema.fields.append(page)

  event = bigquery.TableFieldSchema(
      name='eventInfo',
      type='RECORD',
      mode='NULLABLE',
      description='Event-related fields')

  event_category = bigquery.TableFieldSchema(
      name='eventCategory',
      type='STRING',
      mode='NULLABLE',
      description='Event category')
  event.fields.append(event_category)

  event_action = bigquery.TableFieldSchema(
      name='eventAction',
      type='STRING',
      mode='NULLABLE',
      description='Event action')
  event.fields.append(event_action)

  event_label = bigquery.TableFieldSchema(
      name='eventLabel',
      type='STRING',
      mode='NULLABLE',
      description='Event label')
  event.fields.append(event_label)

  event_value = bigquery.TableFieldSchema(
      name='eventValue',
      type='INTEGER',
      mode='NULLABLE',
      description='Event value')
  event.fields.append(event_value)
  table_schema.fields.append(event)

  promotion = bigquery.TableFieldSchema(
      name='promotion',
      type='RECORD',
      mode='REPEATED',
      description='Promotion-related fields')

  promotion_index = bigquery.TableFieldSchema(
      name='promoIndex',
      type='INTEGER',
      mode='NULLABLE',
      description='Promo index')
  promotion.fields.append(promotion_index)

  promotion_id = bigquery.TableFieldSchema(
      name='promoId', type='STRING', mode='NULLABLE', description='Promo ID')
  promotion.fields.append(promotion_id)

  promotion_name = bigquery.TableFieldSchema(
      name='promoName',
      type='STRING',
      mode='NULLABLE',
      description='Promo name')
  promotion.fields.append(promotion_name)

  promotion_creative = bigquery.TableFieldSchema(
      name='promoCreative',
      type='STRING',
      mode='NULLABLE',
      description='Promo creative')
  promotion.fields.append(promotion_creative)

  promotion_position = bigquery.TableFieldSchema(
      name='promoPosition',
      type='STRING',
      mode='NULLABLE',
      description='Promo position')
  promotion.fields.append(promotion_position)
  table_schema.fields.append(promotion)

  promotion_action = bigquery.TableFieldSchema(
      name='promotionAction',
      type='RECORD',
      mode='NULLABLE',
      description='Promotion action fields')

  promotion_action_is_view = bigquery.TableFieldSchema(
      name='promoIsView',
      type='BOOLEAN',
      mode='NULLABLE',
      description='TRUE if the action is a promo view, '
      'false otherwise')
  promotion_action.fields.append(promotion_action_is_view)

  promotion_action_is_click = bigquery.TableFieldSchema(
      name='promoIsClick',
      type='BOOLEAN',
      mode='NULLABLE',
      description='TRUE if the action is a promo click, '
      'false otherwise')
  promotion_action.fields.append(promotion_action_is_click)
  table_schema.fields.append(promotion_action)

  product = bigquery.TableFieldSchema(
      name='product',
      type='RECORD',
      mode='REPEATED',
      description='Product-related fields')

  product_index = bigquery.TableFieldSchema(
      name='productIndex',
      type='INTEGER',
      mode='NULLABLE',
      description='Product index')
  product.fields.append(product_index)

  product_sku = bigquery.TableFieldSchema(
      name='productSKU',
      type='STRING',
      mode='NULLABLE',
      description='Product SKU')
  product.fields.append(product_sku)

  product_name = bigquery.TableFieldSchema(
      name='productName',
      type='STRING',
      mode='NULLABLE',
      description='Product name')
  product.fields.append(product_name)

  product_brand = bigquery.TableFieldSchema(
      name='productBrand',
      type='STRING',
      mode='NULLABLE',
      description='Product brand')
  product.fields.append(product_brand)

  product_category = bigquery.TableFieldSchema(
      name='productCategory',
      type='STRING',
      mode='NULLABLE',
      description='Product category')
  product.fields.append(product_category)

  product_variant = bigquery.TableFieldSchema(
      name='productVariant',
      type='STRING',
      mode='NULLABLE',
      description='Product variant')
  product.fields.append(product_variant)

  product_price = bigquery.TableFieldSchema(
      name='productPrice',
      type='FLOAT',
      mode='NULLABLE',
      description='Product price')
  product.fields.append(product_price)

  product_qty = bigquery.TableFieldSchema(
      name='productQuantity',
      type='INTEGER',
      mode='NULLABLE',
      description='Product quantity')
  product.fields.append(product_qty)

  product_coupon = bigquery.TableFieldSchema(
      name='productCouponCode',
      type='STRING',
      mode='NULLABLE',
      description='Product coupon code')
  product.fields.append(product_coupon)

  product_cd = bigquery.TableFieldSchema(
      name='customDimensions',
      type='RECORD',
      mode='REPEATED',
      description='Product custom dimensions')

  product_cd_index = bigquery.TableFieldSchema(
      name='index',
      type='INTEGER',
      mode='NULLABLE',
      description='Product custom dimension index')
  product_cd.fields.append(product_cd_index)

  product_cd_value = bigquery.TableFieldSchema(
      name='value',
      type='STRING',
      mode='NULLABLE',
      description='Product custom dimension value')
  product_cd.fields.append(product_cd_value)
  product.fields.append(product_cd)

  product_cm = bigquery.TableFieldSchema(
      name='customMetrics',
      type='RECORD',
      mode='REPEATED',
      description='Product custom metric')

  product_cm_index = bigquery.TableFieldSchema(
      name='index',
      type='INTEGER',
      mode='NULLABLE',
      description='Product custom metric index')
  product_cm.fields.append(product_cm_index)

  product_cm_value = bigquery.TableFieldSchema(
      name='value',
      type='FLOAT',
      mode='NULLABLE',
      description='Product custom metric value')
  product_cm.fields.append(product_cm_value)
  product.fields.append(product_cm)

  product_list_name = bigquery.TableFieldSchema(
      name='productListName',
      type='STRING',
      mode='NULLABLE',
      description='Product list name')
  product.fields.append(product_list_name)

  product_list_position = bigquery.TableFieldSchema(
      name='productListPosition',
      type='INTEGER',
      mode='NULLABLE',
      description='Product list position')
  product.fields.append(product_list_position)

  product_is_impression = bigquery.TableFieldSchema(
      name='isImpression',
      type='BOOLEAN',
      mode='NULLABLE',
      description='TRUE if the product data is associated '
      'with a product impression, FALSE otherwise')
  product.fields.append(product_is_impression)

  product_is_click = bigquery.TableFieldSchema(
      name='isClick',
      type='BOOLEAN',
      mode='NULLABLE',
      description='TRUE if the product data is associated '
      'with a product click, FALSE otherwise')
  product.fields.append(product_is_click)
  table_schema.fields.append(product)

  ecommerce_action = bigquery.TableFieldSchema(
      name='ecommerceAction',
      type='RECORD',
      mode='NULLABLE',
      description='Ecommerce action fields')

  ecommerce_action_type = bigquery.TableFieldSchema(
      name='action_type',
      type='INTEGER',
      mode='NULLABLE',
      description='Ecommerce action type')
  ecommerce_action.fields.append(ecommerce_action_type)

  ecommerce_action_name = bigquery.TableFieldSchema(
      name='name',
      type='STRING',
      mode='NULLABLE',
      description='Ecommerce action name')
  ecommerce_action.fields.append(ecommerce_action_name)

  ecommerce_action_step = bigquery.TableFieldSchema(
      name='step',
      type='INTEGER',
      mode='NULLABLE',
      description='Ecommerce action step')
  ecommerce_action.fields.append(ecommerce_action_step)

  ecommerce_action_option = bigquery.TableFieldSchema(
      name='option',
      type='STRING',
      mode='NULLABLE',
      description='Ecommerce action option')
  ecommerce_action.fields.append(ecommerce_action_option)
  table_schema.fields.append(ecommerce_action)

  transaction = bigquery.TableFieldSchema(
      name='transaction',
      type='RECORD',
      mode='NULLABLE',
      description='Transaction-related fields')

  transaction_id = bigquery.TableFieldSchema(
      name='transactionId',
      type='STRING',
      mode='NULLABLE',
      description='Transaction ID')
  transaction.fields.append(transaction_id)

  transaction_affiliation = bigquery.TableFieldSchema(
      name='affiliation',
      type='STRING',
      mode='NULLABLE',
      description='Transaction affiliation')
  transaction.fields.append(transaction_affiliation)

  transaction_revenue = bigquery.TableFieldSchema(
      name='transactionRevenue',
      type='FLOAT',
      mode='NULLABLE',
      description='Transaction revenue')
  transaction.fields.append(transaction_revenue)

  transaction_tax = bigquery.TableFieldSchema(
      name='transactionTax',
      type='FLOAT',
      mode='NULLABLE',
      description='Transaction tax')
  transaction.fields.append(transaction_tax)

  transaction_shipping = bigquery.TableFieldSchema(
      name='transactionShipping',
      type='FLOAT',
      mode='NULLABLE',
      description='Transaction shipping')
  transaction.fields.append(transaction_shipping)

  transaction_coupon = bigquery.TableFieldSchema(
      name='transactionCoupon',
      type='STRING',
      mode='NULLABLE',
      description='Transaction coupon')
  transaction.fields.append(transaction_coupon)

  transaction_currency_code = bigquery.TableFieldSchema(
      name='currencyCode',
      type='STRING',
      mode='NULLABLE',
      description='Transaction currency code')
  transaction.fields.append(transaction_currency_code)
  table_schema.fields.append(transaction)

  traffic_source = bigquery.TableFieldSchema(
      name='trafficSource',
      type='RECORD',
      mode='NULLABLE',
      description='Traffic source fields')

  traffic_source_campaign = bigquery.TableFieldSchema(
      name='campaign',
      type='STRING',
      mode='NULLABLE',
      description='Campaign name')
  traffic_source.fields.append(traffic_source_campaign)

  traffic_source_campaign_code = bigquery.TableFieldSchema(
      name='campaignCode',
      type='STRING',
      mode='NULLABLE',
      description='Campaign code')
  traffic_source.fields.append(traffic_source_campaign_code)

  traffic_source_source = bigquery.TableFieldSchema(
      name='source',
      type='STRING',
      mode='NULLABLE',
      description='Campaign source')
  traffic_source.fields.append(traffic_source_source)

  traffic_source_medium = bigquery.TableFieldSchema(
      name='medium',
      type='STRING',
      mode='NULLABLE',
      description='Campaign medium')
  traffic_source.fields.append(traffic_source_medium)

  traffic_source_keyword = bigquery.TableFieldSchema(
      name='keyword',
      type='STRING',
      mode='NULLABLE',
      description='Campaign keyword')
  traffic_source.fields.append(traffic_source_keyword)

  traffic_source_adcontent = bigquery.TableFieldSchema(
      name='adContent',
      type='STRING',
      mode='NULLABLE',
      description='Campaign ad content')
  traffic_source.fields.append(traffic_source_adcontent)

  traffic_source_gclid = bigquery.TableFieldSchema(
      name='gclId',
      type='STRING',
      mode='NULLABLE',
      description='Google click ID')
  traffic_source.fields.append(traffic_source_gclid)

  traffic_source_dclid = bigquery.TableFieldSchema(
      name='dclId',
      type='STRING',
      mode='NULLABLE',
      description='Display click ID')
  traffic_source.fields.append(traffic_source_dclid)

  traffic_source_dr = bigquery.TableFieldSchema(
      name='referrer',
      type='STRING',
      mode='NULLABLE',
      description='Document referrer')
  traffic_source.fields.append(traffic_source_dr)

  traffic_source_gclsrc = bigquery.TableFieldSchema(
      name='gclSrc',
      type='STRING',
      mode='NULLABLE',
      description='Google click ID source')
  traffic_source.fields.append(traffic_source_gclsrc)
  table_schema.fields.append(traffic_source)

  device = bigquery.TableFieldSchema(
      name='device',
      type='RECORD',
      mode='NULLABLE',
      description='Device-related fields')

  device_screen_colors = bigquery.TableFieldSchema(
      name='screenColors',
      type='STRING',
      mode='NULLABLE',
      description='Screen color depth')
  device.fields.append(device_screen_colors)

  device_screen_resolution = bigquery.TableFieldSchema(
      name='screenResolution',
      type='STRING',
      mode='NULLABLE',
      description='Screen resolution')
  device.fields.append(device_screen_resolution)

  device_browser_size = bigquery.TableFieldSchema(
      name='browserSize',
      type='STRING',
      mode='NULLABLE',
      description='Viewport size')
  device.fields.append(device_browser_size)

  device_java_enabled = bigquery.TableFieldSchema(
      name='javaEnabled',
      type='BOOLEAN',
      mode='NULLABLE',
      description='TRUE if Java is enabled, false otherwise')
  device.fields.append(device_java_enabled)

  device_language = bigquery.TableFieldSchema(
      name='language',
      type='STRING',
      mode='NULLABLE',
      description='Browser language setting')
  device.fields.append(device_language)

  device_document_encoding = bigquery.TableFieldSchema(
      name='documentEncoding',
      type='STRING',
      mode='NULLABLE',
      description='Document encoding setting')
  device.fields.append(device_document_encoding)

  device_flash_version = bigquery.TableFieldSchema(
      name='flashVersion',
      type='STRING',
      mode='NULLABLE',
      description='Flash version')
  device.fields.append(device_flash_version)

  device_browser = bigquery.TableFieldSchema(
      name='browser',
      type='STRING',
      mode='NULLABLE',
      description='Browser name')
  device.fields.append(device_browser)

  device_browser_version = bigquery.TableFieldSchema(
      name='browserVersion',
      type='STRING',
      mode='NULLABLE',
      description='Browser version')
  device.fields.append(device_browser_version)

  device_mobile_device_model = bigquery.TableFieldSchema(
      name='mobileDeviceModel',
      type='STRING',
      mode='NULLABLE',
      description='Mobile device model')
  device.fields.append(device_mobile_device_model)

  device_os = bigquery.TableFieldSchema(
      name='operatingSystem',
      type='STRING',
      mode='NULLABLE',
      description='Device OS')
  device.fields.append(device_os)

  device_os_version = bigquery.TableFieldSchema(
      name='operatingSystemVersion',
      type='STRING',
      mode='NULLABLE',
      description='Device OS version')
  device.fields.append(device_os_version)

  device_mobile_device_branding = bigquery.TableFieldSchema(
      name='mobileDeviceBranding',
      type='STRING',
      mode='NULLABLE',
      description='Mobile device branding')
  device.fields.append(device_mobile_device_branding)

  device_ua = bigquery.TableFieldSchema(
      name='userAgent',
      type='STRING',
      mode='NULLABLE',
      description='User agent string')
  device.fields.append(device_ua)
  table_schema.fields.append(device)

  geo = bigquery.TableFieldSchema(
      name='geo',
      type='RECORD',
      mode='NULLABLE',
      description='Geo-related fields')

  geo_country = bigquery.TableFieldSchema(
      name='country', type='STRING', mode='NULLABLE', description='Country')
  geo.fields.append(geo_country)

  geo_region = bigquery.TableFieldSchema(
      name='region', type='STRING', mode='NULLABLE', description='Region')
  geo.fields.append(geo_region)

  geo_city = bigquery.TableFieldSchema(
      name='city', type='STRING', mode='NULLABLE', description='City')
  geo.fields.append(geo_city)
  table_schema.fields.append(geo)

  latency = bigquery.TableFieldSchema(
      name='latencyTracking',
      type='RECORD',
      mode='NULLABLE',
      description='Page performance fields')

  latency_plt = bigquery.TableFieldSchema(
      name='pageLoadTime',
      type='FLOAT',
      mode='NULLABLE',
      description='Page load time')
  latency.fields.append(latency_plt)

  latency_pdt = bigquery.TableFieldSchema(
      name='pageDownloadTime',
      type='FLOAT',
      mode='NULLABLE',
      description='Page download time')
  latency.fields.append(latency_pdt)

  latency_dlt = bigquery.TableFieldSchema(
      name='domainLookupTime',
      type='FLOAT',
      mode='NULLABLE',
      description='Domain lookup time')
  latency.fields.append(latency_dlt)

  latency_rrt = bigquery.TableFieldSchema(
      name='redirectionTime',
      type='FLOAT',
      mode='NULLABLE',
      description='Redirection time')
  latency.fields.append(latency_rrt)

  latency_srt = bigquery.TableFieldSchema(
      name='serverResponseTime',
      type='FLOAT',
      mode='NULLABLE',
      description='Server response time')
  latency.fields.append(latency_srt)

  latency_tcp = bigquery.TableFieldSchema(
      name='serverConnectionTime',
      type='FLOAT',
      mode='NULLABLE',
      description='Server connection time')
  latency.fields.append(latency_tcp)

  latency_dit = bigquery.TableFieldSchema(
      name='domInteractiveTime',
      type='FLOAT',
      mode='NULLABLE',
      description='DOM interactive time')
  latency.fields.append(latency_dit)

  latency_dlt = bigquery.TableFieldSchema(
      name='domContentLoadedTime',
      type='FLOAT',
      mode='NULLABLE',
      description='DOM content loaded time')
  latency.fields.append(latency_dlt)
  table_schema.fields.append(latency)

  experiment_id = bigquery.TableFieldSchema(
      name='experimentId',
      type='STRING',
      mode='NULLABLE',
      description='Experiment ID')
  table_schema.fields.append(experiment_id)

  experiment_variant = bigquery.TableFieldSchema(
      name='experimentVariant',
      type='STRING',
      mode='NULLABLE',
      description='Experiment variant')
  table_schema.fields.append(experiment_variant)

  tracking_id = bigquery.TableFieldSchema(
      name='trackingId',
      type='STRING',
      mode='NULLABLE',
      description='Tracking ID')
  table_schema.fields.append(tracking_id)

  container_id = bigquery.TableFieldSchema(
      name='containerId',
      type='STRING',
      mode='NULLABLE',
      description='Container ID')
  table_schema.fields.append(container_id)

  tag_version = bigquery.TableFieldSchema(
      name='tagVersion',
      type='STRING',
      mode='NULLABLE',
      description='Tag version')
  table_schema.fields.append(tag_version)

  cache_buster = bigquery.TableFieldSchema(
      name='cacheBuster',
      type='STRING',
      mode='NULLABLE',
      description='Cache buster')
  table_schema.fields.append(cache_buster)

  return table_schema
